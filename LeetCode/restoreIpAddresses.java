package LeetCode;

import java.util.ArrayList;
import java.util.List;

public class restoreIpAddresses {
	
    public static List<String> restoreIpAddresses(String s) {
        List<String> res=new ArrayList<String>();
        if(s.length()>12 || s.length()<4) return res;
        dfs(res, s, "", 0);
        return res;
    }
    
    private static void dfs(List<String> res, String left, String current, int count){
        if(count==3 && isValid(left)){
            res.add(current+left);
            return;
        }
        for(int i=1; i<=3 && i<left.length(); i++){
            if(isValid(left.substring(0,i))){
                dfs(res,left.substring(i), current+left.substring(0,i)+".", count+1);
            }
        }
    }
    private static boolean isValid(String tmp){
        if (tmp.charAt(0)=='0') return tmp.equals("0");  
        System.out.println(tmp);
        int num = Integer.parseInt(tmp);  
        return num<=255 && num>0;  
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(restoreIpAddresses

	}

}
